#Компонет в котром указаны свойства только для чтения
PostReadonlyProperties:
  type: object
  properties:
    id:
      type: integer
      description: Идентификатор поста
      example: 1
    preview:
      nullable: true
      allOf:
        - type: object
        - $ref: '#/PostFile'
      description: Превью поста
#Это поля которы содержаться в табличке Post
PostFillableProperties:
  type: object
  properties:
    title: 
      type: string
      description: Название поста
      example: Я очень интересная статья
    text: 
      type: string
      description: Текст статьи 
    tags:
      type: string
      description: теги с статье
      example: php,js,docker
    user_id:
      type: integer
      description: Идентификатор пользователя
      example: 42
    created_at:
      type: string 
      format: date-time
      example: 2020-01-01T15:47:21.000000Z
#Обезательные свойства при запросе
PostRequiredRequestProperties:
  type: object
  required:
    - user_id
# Сборка и компонентов ответа нашего API
PostResponse:
  type: object
  properties:
    data:
      $ref: '#/Post'
    meta:
      type: object
  required:
      - data
#Обезательные поля ответа API
PostRequiredResponseProperties:
  type: object
  required:
    - id
    - title
    - preview 
    - text
    - tags
    - created_at
#Описание ответа с пагинцией
PostsResponse:
  type: object
  properties:
    data:
      type: array
      items:
        $ref: '#/Post'
    meta:
      type: object
      properties: 
        pagination: 
          $ref: '../common_schemas.yaml#/ResponseBodyPagination'
  required:
      - data
      - meta
#Что собой предстовляет сущность пост
Post:
  allOf:
    - $ref: '#/PostReadonlyProperties'
    - $ref: '#/PostFillableProperties'
    - $ref: '#/PostRequiredResponseProperties'
#Запрос на создание поста
CreatePostRequest:
  allOf:
    - $ref: '#/PostFillableProperties'
    - $ref: '#/PostRequiredRequestProperties'
PatchPostRequest:
  allOf:
    - $ref: '#/PostFillableProperties'
    - $ref: '#/PostRequiredRequestProperties'
#Описание файла
PostFile:
  type: object
  properties:
    path:
      type: string
      description: Путь до файла относительно корня диска домена
      example: "attachments/48/2f/image.png"
    root_path:
      type: string
      description: Путь до файла относительно корня физического диска ensi
      example: "protected/domain/attachments/48/2f/image.png"
    url:
      type: string
      description: Ссылка для скачивания файла
      example: "https://es-public.project.ru/domain/attachments/48/2f/image.png"
#Описание фильтров для поиска
SearchPostsFilter:
  type: object
  properties:
    tags_like:
      type: array
      example: "[php,js]"
    voice:
      type: string
      example: 5
    voice_gt:
      type: string
      example: 2
    voice_lt:
      type: string
      example: 10
#Описание сортировки
RequestPostSort:
  type: array
  items:
    type: string
    example: "desc or asc"
#описание подлючаемых сущностей
RequestPostInclude:
  type: array
  items:
    type: string
    example: 'voices_count'
#Описание запроса на поиск
SearchPostsRequest:
  type: object
  properties: 
    sort:
      $ref: '#/RequestPostSort'
    filter: 
      $ref: '#/SearchPostsFilter'
    include:
      $ref: '#/RequestPostInclude'
    pagination:
      $ref: '../common_schemas.yaml#/RequestBodyPagination'
#Описание результата поиска
SearchPostsResponse:
  type: object
  properties:
    data:
      type: array
      items:
        $ref: '#/Post'
    meta:
      type: object
      properties: 
        pagination: 
          $ref: '../common_schemas.yaml#/ResponseBodyPagination'
  required:
      - data
      - meta